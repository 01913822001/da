# encoding: utf-8
# arabic.rb
#                           wookay.noh at gmail.com

# take from Roman Czyborra's perl code
# http://czyborra.com/arabjoin/arabjoin

ARABIC_FORM = {
  1569 => [65152, nil, nil, nil],
  1570 => [65153, 65154, nil, nil],
  1571 => [65155, 65156, nil, nil],
  1572 => [65157, 65158, nil, nil],
  1573 => [65159, 65160, nil, nil],
  1574 => [65161, 65162, 65164, 65163],
  1575 => [65165, 65166, nil, nil],
  1576 => [65167, 65168, 65170, 65169],
  1577 => [65171, 65172, nil, nil],
  1578 => [65173, 65174, 65176, 65175],
  1579 => [65177, 65178, 65180, 65179],
  1580 => [65181, 65182, 65184, 65183],
  1581 => [65185, 65186, 65188, 65187],
  1582 => [65189, 65190, 65192, 65191],
  1583 => [65193, 65194, nil, nil],
  1584 => [65195, 65196, nil, nil],
  1585 => [65197, 65198, nil, nil],
  1586 => [65199, 65200, nil, nil],
  1587 => [65201, 65202, 65204, 65203],
  1588 => [65205, 65206, 65208, 65207],
  1589 => [65209, 65210, 65212, 65211],
  1590 => [65213, 65214, 65216, 65215],
  1591 => [65217, 65218, 65220, 65219],
  1592 => [65221, 65222, 65224, 65223],
  1593 => [65225, 65226, 65228, 65227],
  1594 => [65229, 65230, 65232, 65231],
  1600 => [1600, 1600, 1600, 1600],
  1601 => [65233, 65234, 65236, 65235],
  1602 => [65237, 65238, 65240, 65239],
  1603 => [65241, 65242, 65244, 65243],
  1604 => [65245, 65246, 65248, 65247],
  1605 => [65249, 65250, 65252, 65251],
  1606 => [65253, 65254, 65256, 65255],
  1607 => [65257, 65258, 65260, 65259],
  1608 => [65261, 65262, nil, nil],
  1609 => [65263, 65264, 32, 47],
  1610 => [65265, 65266, 65268, 65267],
  1649 => [64336, 32, 47, 47],
  1650 => [1650, 1650, nil, nil],
  1651 => [1651, 1651, nil, nil],
  1652 => [1652, nil, nil, nil],
  1653 => [1653, 1653, nil, nil],
  1654 => [1654, 1654, nil, nil],
  1655 => [64477, 1655, nil, nil],
  1656 => [1656, 1656, 1656, 1656],
  1657 => [64358, 64359, 64361, 64360],
  1658 => [64350, 64351, 64353, 64352],
  1659 => [64338, 64339, 64341, 64340],
  1660 => [1660, 1660, 1660, 1660],
  1661 => [1661, 1661, 1661, 1661],
  1662 => [64342, 64343, 64345, 64344],
  1663 => [64354, 64355, 64357, 64356],
  1664 => [64346, 64347, 64349, 64348],
  1665 => [1665, 1665, 1665, 1665],
  1666 => [1666, 1666, 1666, 1666],
  1667 => [64374, 64375, 64377, 64376],
  1668 => [64370, 64371, 64373, 64372],
  1669 => [1669, 1669, 1669, 1669],
  1670 => [64378, 64379, 64381, 64380],
  1671 => [64382, 64383, 64385, 64384],
  1672 => [64392, 64393, nil, nil],
  1673 => [1673, 1673, nil, nil],
  1674 => [1674, 1674, nil, nil],
  1675 => [1675, 1675, nil, nil],
  1676 => [64388, 64389, nil, nil],
  1677 => [64386, 64387, nil, nil],
  1678 => [64390, 64391, nil, nil],
  1679 => [1679, 1679, nil, nil],
  1680 => [1680, 1680, nil, nil],
  1681 => [64396, 64397, nil, nil],
  1682 => [1682, 1682, nil, nil],
  1683 => [1683, 1683, nil, nil],
  1684 => [1684, 1684, nil, nil],
  1685 => [1685, 1685, nil, nil],
  1686 => [1685, 1686, nil, nil],
  1687 => [1687, 1687, nil, nil],
  1688 => [64394, 64395, nil, nil],
  1689 => [1689, 1689, nil, nil],
  1690 => [1690, 1690, 1690, 1690],
  1691 => [1691, 1691, 1691, 1691],
  1692 => [1692, 1692, 1692, 1692],
  1693 => [1693, 1693, 1693, 1693],
  1694 => [1694, 1694, 1694, 1694],
  1695 => [1695, 1695, 1695, 1695],
  1696 => [1696, 1696, 1696, 1696],
  1697 => [1697, 1697, 1697, 1697],
  1698 => [1698, 1698, 1698, 1698],
  1699 => [1699, 1699, 1699, 1699],
  1700 => [64362, 64363, 64365, 64364],
  1701 => [1701, 1701, 1701, 1701],
  1702 => [64366, 64367, 64369, 64368],
  1703 => [1703, 1703, 1703, 1703],
  1704 => [1704, 1704, 1704, 1704],
  1705 => [64398, 64399, 64401, 64400],
  1706 => [1706, 1706, 1706, 1706],
  1707 => [1707, 1707, 1707, 1707],
  1708 => [1708, 1708, 1708, 1708],
  1709 => [64467, 64468, 64470, 64469],
  1710 => [1710, 1710, 1710, 1710],
  1711 => [64402, 64403, 64405, 64404],
  1712 => [1712, 1712, 1712, 1712],
  1713 => [64410, 64411, 64413, 64412],
  1714 => [1714, 1714, 1714, 1714],
  1715 => [64406, 64407, 64409, 64408],
  1716 => [1716, 1716, 1716, 1716],
  1717 => [1717, 1717, 1717, 1717],
  1718 => [1718, 1718, 1718, 1718],
  1719 => [1719, 1719, 1719, 1719],
  1722 => [64414, 64415, 1722, 1722],
  1723 => [64416, 64417, 64419, 64418],
  1724 => [1724, 1724, 1724, 1724],
  1725 => [1725, 1725, 1725, 1725],
  1726 => [64426, 64427, 64429, 64428],
  1728 => [64420, 64421, nil, nil],
  1729 => [1729, 1729, 1729, 1729],
  1730 => [1730, 1730, nil, nil],
  1731 => [1731, 1731, nil, nil],
  1732 => [1732, 1732, nil, nil],
  1733 => [1733, 1733, nil, nil],
  1734 => [1734, 1734, nil, nil],
  1735 => [1735, 1735, nil, nil],
  1736 => [1736, 1736, nil, nil],
  1737 => [1737, 1737, nil, nil],
  1738 => [1738, 1738, nil, nil],
  1739 => [1739, 1739, nil, nil],
  1740 => [1740, 1740, 1740, 1740],
  1741 => [1741, 1741, nil, nil],
  1742 => [1742, 1742, 1742, 1742],
  1744 => [1744, 1744, 1744, 1744],
  1745 => [1745, 1745, 1745, 1745],
  1746 => [64430, 64431, nil, nil],
  1747 => [64432, 64433, nil, nil],
  1749 => [1749, nil, nil, nil],
  8205 => [8205, 8205, 8205, 8205]
}
ARABIC_TRANSPARENT = [1611, 1612, 1613, 1614, 1615, 1616, 1648, 1751, 1752,
  1753, 1754, 1755, 1756, 1759, 1760, 1761, 1762, 1763, 1764, 1767, 1768,
  1770, 1771, 1772, 1773]
LAM_ALEF_LIGATURES = {
  "ﺂﻟ"=>"ﻵ", "ﺂﻠ"=>"ﻶ", "ﺄﻟ"=>"ﻷ", "ﺄﻠ"=>"ﻸ",
  "ﺈﻟ"=>"ﻹ", "ﺈﻠ"=>"ﻺ", "ﺎﻟ"=>"ﻻ", "ﺎﻠ"=>"ﻼ"
}
BITSTREAM_CYBERBIT_LIGATURES = {
 "ﻢﺗ"=>"ﰎ", "ﻲﻓ"=>"ﰲ", "ﺞﻟ"=>"ﰿ", "ﺢﻟ"=>"ﱀ", "ﺦﻟ"=>"ﱁ", "ﻢﻟ"=>"ﱂ",
 "ﻰﻟ"=>"ﱃ", "ﻲﻟ"=>"ﱄ", "ﻢﻧ"=>"ﱎ", "ٌّ"=>"ﱞ", "ٍّ"=>"ﱟ", "َّ"=>"ﱠ",
 "ُّ"=>"ﱡ", "ِّ"=>"ﱢ", "ﺮﺒ"=>"ﱪ", "ﻦﺒ"=>"ﱭ", "ﻲﺒ"=>"ﱯ", "ﺮﺘ"=>"ﱰ",
 "ﻦﺘ"=>"ﱳ", "ﻲﺘ"=>"ﱵ", "ﻲﻨ"=>"ﲏ", "ﺮﻴ"=>"ﲑ", "ﻦﻴ"=>"ﲔ", "ﺠﺑ"=>"ﲜ",
 "ﺤﺑ"=>"ﲝ", "ﺨﺑ"=>"ﲞ", "ﻤﺑ"=>"ﲟ", "ﺠﺗ"=>"ﲡ", "ﺤﺗ"=>"ﲢ", "ﺨﺗ"=>"ﲣ",
 "ﻤﺗ"=>"ﲤ", "ﻤﺛ"=>"ﲦ", "ﻤﺟ"=>"ﲨ", "ﻤﺣ"=>"ﲪ", "ﻤﺧ"=>"ﲬ", "ﻤﺳ"=>"ﲰ",
 "ﺠﻟ"=>"ﳉ", "ﺤﻟ"=>"ﳊ", "ﺨﻟ"=>"ﳋ", "ﻤﻟ"=>"ﳌ", "ﻬﻟ"=>"ﳍ", "ﺠﻣ"=>"ﳎ",
 "ﺤﻣ"=>"ﳏ", "ﺨﻣ"=>"ﳐ", "ﻤﻣ"=>"ﳑ", "ﺠﻧ"=>"ﳒ", "ﺤﻧ"=>"ﳓ", "ﺨﻧ"=>"ﳔ",
 "ﻤﻧ"=>"ﳕ", "ﺠﻳ"=>"ﳚ", "ﺤﻳ"=>"ﳛ", "ﺨﻳ"=>"ﳜ", "ﻤﻳ"=>"ﳝ", "ﺤﻤﻟ"=>"ﶈ",
 "ﻪﻠﻟﺍ"=>"ﷲ", "ﻢﻠﺳﻭ"=>"ﻪﻴﻠﻋ", "ﻪﻟﺎﻠﺟ"=>"ﻞﺟ"
}

ISOLATED = 0
FINAL = 1
MEDIAL = 2
INITIAL = 3

def get_form formtype, c
  form = ARABIC_FORM[c]
  form[formtype] if form
end
def isolated c
  get_form ISOLATED, c
end
def final c
  get_form FINAL, c
end
def medial c
  get_form MEDIAL, c
end
def initial c
  get_form INITIAL, c
end

def arabjoin s
  uchar = s.unpack('U*')
  ret = []
  a,b,c = nil
  i = 0
  while i < uchar.size
    j = i
    b = uchar[j]
    loop do
      c = uchar[j+=1]
      break if not ARABIC_TRANSPARENT.include? c
    end
    char = a && final(c) && medial(b) || final(c) && initial(b) ||
           a && final(b) || isolated(b) || b
    ret.push char
    a = initial(b) && final(c) 
    i = j
  end
  str = ret.reverse.pack('U*')
  LAM_ALEF_LIGATURES.merge(BITSTREAM_CYBERBIT_LIGATURES).each do |k, v|
    str.gsub! k, v
  end
  str
end


require 'fiber'

class String
  def right_to_left
    arabjoin self
  end
  def left_to_right
    self
  end
end

class Worker
  def initialize
    @text = ''
  end
  def feed pose, char
    case pose
    when :compose
      @text.concat char
      @text.right_to_left
    when :depose
      separated = @text.unpack('U*')
      separated.pop
      @text = separated.pack('U*')
    when :pop
      separated = @text.unpack('U*')
      result = separated.pop
      @text = separated.pack('U*')
      result
    when :text
      @text.right_to_left
    end
  end
end

class Arabic < Fiber
  def initialize
    super do |pose, char|
      worker = Worker.new
      loop do
        result = worker.feed pose, char
        pose, char = Fiber.yield result
      end
    end
  end
  def compose char
    resume :compose, char
  end
  def depose
    resume :depose, nil
  end
  def pop
    resume :pop, nil
  end
  def text
    resume :text, nil
  end
end
